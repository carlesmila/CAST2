% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knndm.R
\name{knndm}
\alias{knndm}
\title{EXPERIMENTAL K-fold Nearest Neighbour Distance Matching function}
\usage{
knndm(
  tpoints,
  modeldomain = NULL,
  ppoints = NULL,
  k = 10,
  kclust = NULL,
  maxsize = NULL,
  samplesize = 1000,
  sampling = "regular",
  cl = NULL,
  verbose = T
)
}
\arguments{
\item{tpoints}{sf or sfc point object. Contains the training points samples.}

\item{modeldomain}{raster or sf object defining the prediction area (see Details).}

\item{ppoints}{sf or sfc point object. Contains the target prediction points. Optional. Alternative to modeldomain (see Details).}

\item{k}{integer. Final number of folds desired for CV. Defaults to 10.}

\item{kclust}{integer. Intermediate number of clusters for agglomerative clustering. Lower numbers result in faster results,
but the quality of the results may be compromised. Defaults to half of the training points.
Consider increasing that number if G*j(r) < Gij(r) for short distances, which may happen in cases with weak clustering.}

\item{maxsize}{numeric. maximum proportion of training samples to have in a fold. Defaults to 1/k*2}

\item{samplesize}{numeric. How many points in the modeldomain should be sampled as prediction points?
Only required if modeldomain is used instead of ppoints.}

\item{sampling}{character. How to draw prediction points from the modeldomain? See spsample. Use sampling = "Fibonacci" for global applications.
Only required if modeldomain is used instead of ppoints.}

\item{cl}{TBC.}

\item{verbose}{logical. Show progress, TRUE by default.}
}
\value{
An object of class \emph{knndm} consisting of a list of six elements:
indx_train, indx_test (indices of the observations to use as
training/test data in each kNNDM CV iteration), Gij (distances for
G function construction between prediction and target points), Gj
(distances for G function construction during LOO CV), Gjstar (distances
for modified G function during kNNDM CV), clusters (ordered list of cluster
IDs for each training point).
}
\description{
This function implements the kNNDM algorithm and returns the necessary
indices to perform a kNNDM CV for map validation.
}
\details{
TBC.
}
\note{
Experimental cycle. Parallel implementation pending. Missing references.
}
\examples{
########################################################################
# Example 1: Simulated data
########################################################################

library(sf)
library(ggplot2)

# Simulate 10000 clustered training points in a 100x100 square
set.seed(1234)
simarea <- list(matrix(c(0,0,0,100,100,100,100,0,0,0), ncol=2, byrow=TRUE))
simarea <- sf::st_polygon(simarea)
train_points <- clustered_sample(simarea, 500, 50, 5)
pred_points <- sf::st_sample(simarea, 1000, type = "regular")

# Run kNNDM for the whole domain, here the prediction points are known.
knndm_pred <- knndm(train_points, ppoints = pred_points)
plot(knndm_pred)
ggplot() +
  geom_sf(data = simarea, alpha = 0) +
  geom_sf(data = train_points, col = knndm_pred$clusters)

########################################################################
# Example 2: Real- world example; using a modeldomain instead of previously
# sampled prediction locations
########################################################################
\dontrun{
library(sf)
library(raster)

### prepare sample data:
dat <- get(load(system.file("extdata","Cookfarm.RData",package="CAST")))
dat <- aggregate(dat[,c("DEM","TWI", "NDRE.M", "Easting", "Northing","VW")],
   by=list(as.character(dat$SOURCEID)),mean)
pts <- dat[,-1]
pts <- st_as_sf(pts,coords=c("Easting","Northing"))
st_crs(pts) <- 26911
studyArea <- raster::stack(system.file("extdata","predictors_2012-03-25.grd",package="CAST"))

knndm_folds <- knndm(pts, k=5, modeldomain=studyArea)
plot(knndm_folds)
ggplot() +
  geom_sf(data = knndm_folds, col = knndm_folds$clusters)

#use for cross-validation:
library(caret)
ctrl <- trainControl(method="cv",
   index=knndm_folds$indx_train)
model_knndm <- train(dat[,c("DEM","TWI", "NDRE.M")],
   dat$VW,
   method="rf",
   trControl = ctrl)
model_knndm
}
}
\author{
Carles MilÃ 
}
